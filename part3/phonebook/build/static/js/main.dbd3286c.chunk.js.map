{"version":3,"sources":["services/persons.js","components/Person.js","components/Filter.js","components/Notification.js","components/PersonForm.js","App.js","index.js"],"names":["baseURL","personServices","getAll","axios","get","then","response","data","createEntry","newPerson","post","updateEntry","id","put","deleteEntry","delete","Person","person","deleteRecord","name","number","onClick","Filter","value","handleSearchChange","filteredPersons","onChange","map","Notification","message","type","className","notif","PersonForm","newName","newNumber","addName","handleNameChange","handleNumberChange","onSubmit","App","useState","persons","setPersons","setFilteredPersons","setNewName","setNewNumber","newSearch","setNewSearch","setMessage","setTimeout","useEffect","retrievedPersons","event","target","filter","toLowerCase","match","preventDefault","personToBeAdded","personIsPresent","find","undefined","window","confirm","updatedPerson","concat","personsRemaining","catch","error","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dbd3286c.chunk.js","sourcesContent":["import axios from 'axios'\r\n// const baseURL = \"http://localhost:3001/persons\"\r\n// const baseURL = \"http://localhost:3001/api/persons\"\r\nconst baseURL = \"https://peaceful-atoll-65930.herokuapp.com/api/persons\"\r\n\r\nconst getAll = () => axios.get(baseURL).then(response => response.data)\r\n\r\nconst createEntry = newPerson => axios.post(baseURL, newPerson).then(response => response.data)\r\n\r\nconst updateEntry = (id, newPerson) => axios.put(`${baseURL}/${id}`, newPerson).then(response => response.data)\r\n\r\nconst deleteEntry = id => axios.delete(`${baseURL}/${id}`)\r\n\r\nconst personServices = { getAll, createEntry, updateEntry, deleteEntry }\r\n\r\nexport default personServices \r\n","import React from 'react'\r\n\r\nconst Person = ({ person, deleteRecord }) => {\r\n    return (\r\n        <div>\r\n            {person.name} {person.number}\r\n            <button onClick={deleteRecord}>delete</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Person","import React from 'react'\r\n\r\nconst Filter = ( { value, handleSearchChange, filteredPersons } ) => {\r\n    return (\r\n        <div>\r\n            filter shown with <input value={value} onChange={handleSearchChange} />\r\n            <ul>\r\n                {filteredPersons.map(person => <div key={person.name}>{person.name}</div>)}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Filter","import React from 'react'\r\n\r\nconst Notification = ({ message }) => {\r\n    if (message === null) return null\r\n    if (message.type === \"success\") {\r\n        return (\r\n            <div className=\"success\">\r\n                {message.notif}\r\n            </div>\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <div className=\"error\">\r\n                {message.notif}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Notification","import React from 'react'\r\n\r\nconst PersonForm = ({ newName, newNumber, addName, handleNameChange, handleNumberChange }) => {\r\n    return (\r\n        <form onSubmit={addName}>\r\n            <div>name: <input value={newName} onChange={handleNameChange} /></div>\r\n            <div>number: <input value={newNumber} onChange={handleNumberChange} /></div>\r\n            <div>\r\n                <button type=\"submit\">add</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default PersonForm","import React, { useState, useEffect } from 'react'\r\nimport personServices from './services/persons'\r\nimport Person from './components/Person'\r\nimport Filter from './components/Filter'\r\nimport Notification from './components/Notification'\r\nimport PersonForm from './components/PersonForm'\r\n\r\n\r\nconst App = () => {\r\n  const [ persons, setPersons ] = useState([])\r\n  const [ filteredPersons, setFilteredPersons ] = useState([])\r\n  const [ newName, setNewName ] = useState('')\r\n  const [ newNumber, setNewNumber ] = useState('')\r\n  const [ newSearch, setNewSearch ] = useState(' ')\r\n  const [ message, setMessage ] = useState(null)\r\n\r\n  const notif = (notif, type) => {\r\n    setMessage({notif, type})\r\n    setTimeout(() => setMessage(null), 3000)\r\n  }\r\n\r\n  useEffect(() => {\r\n                  personServices\r\n                  .getAll()\r\n                  .then(retrievedPersons => setPersons(retrievedPersons)) }\r\n                  , [])\r\n\r\n  const addName = (event) => {\r\n    event.preventDefault()\r\n    const personToBeAdded = { name: newName, number: newNumber }\r\n    const personIsPresent = persons.find(person => person.name.toLowerCase() === newName.toLowerCase())\r\n    if (personIsPresent !== undefined) { \r\n      if (window.confirm(`${newName} has already been added to phonebook, replace the old number with a new one?`)) {\r\n        personServices.updateEntry(personIsPresent.id, personToBeAdded)\r\n                      .then(updatedPerson => {\r\n                        notif(`${updatedPerson.name}'s number has been updated`, 'success')\r\n                        setPersons(persons.map(person => person.name.toLowerCase() !== newName.toLowerCase() ? person : updatedPerson))\r\n                        setNewName('')\r\n                        setNewNumber('')\r\n                        }  \r\n                      )\r\n      }\r\n    }\r\n    else {\r\n      personServices.createEntry(personToBeAdded)\r\n                    .then(newPerson => {\r\n                      notif(`${newPerson.name} has been added`, 'success')\r\n                      setPersons(persons.concat(newPerson))\r\n                      setNewName('')\r\n                      setNewNumber('')\r\n                    })\r\n    }\r\n  }\r\n\r\n  const deleteRecord = (id, name) => {\r\n    if (window.confirm(`Delete ${name}?`)) {\r\n      const personsRemaining = persons.filter(person => person.id !== id)\r\n      personServices.deleteEntry(id)\r\n                    .then(() => setPersons(personsRemaining))\r\n                    .catch(error => {\r\n                      notif(`Information of ${name} has already been removed from server`, 'error')\r\n                    })\r\n    }\r\n  }\r\n\r\n  const handleNameChange = (event) => setNewName(event.target.value)\r\n  const handleNumberChange = (event) => setNewNumber(event.target.value)\r\n  const handleSearchChange = (event) => {\r\n    setNewSearch(event.target.value)\r\n    if (event.target.value === '') setFilteredPersons([])\r\n    else setFilteredPersons(persons.filter(person => person.name.toLowerCase().match(newSearch.toLowerCase())))\r\n  }\r\n  \r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n      <Notification message={message} />\r\n      <Filter value={newSearch} handleSearchChange={handleSearchChange} filteredPersons={filteredPersons} />\r\n      <h2>add a new</h2>\r\n      <PersonForm newName={newName} newNumber={newNumber} addName={addName} handleNameChange={handleNameChange} handleNumberChange={handleNumberChange} />\r\n      <h2>Numbers</h2>\r\n      <ul>\r\n          {persons.map(person => <Person key={person.name} person={person} deleteRecord={() => deleteRecord(person.id, person.name)} />)}\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","import ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './index.css'\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}